[tool]

[tool.poetry]
name = "kandelero"
version = "0.1.0"
homepage = "https://github.com/jonasborges/kandelero"
description = "Pattern finder for candlestick charts."
authors = ["Jonas Borges Alves <jonasborgesalves@gmail.com>"]
readme = "README.md"
license = "MIT"
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [{ include = "kandelero" }, { include = "tests", format = "sdist" }]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
black = "^22.3"
isort = "^5.10.1"
flake8 = "^4.0.1"
flake8-docstrings = { version = "^1.6.0", optional = true }
pytest = { version = "7.1.2", optional = true }
pytest-cov = "^3.0.0"
tox = "^3.25.0"
virtualenv = { version = "^20.14.1", optional = true }
pip = { version = "^20.3.1", optional = true }
mkdocs = { version = "^1.3.0", optional = true }
mkdocs-include-markdown-plugin = { version = "^3.5.1", optional = true }
mkdocs-material = { version = "^8.2.16", optional = true }
mkdocstrings = { version = "^0.18.1", optional = true }
mkdocs-material-extensions = { version = "^1.0.1", optional = true }
twine = { version = "^4.0.0", optional = true }
mkdocs-autorefs = { version = "0.4.1", optional = true }
pre-commit = "^2.19.0"
toml = { version = "^0.10.2", optional = true }
livereload = "^2.6.0"
pandas = "^1.4.2"

[tool.poetry.extras]
test = ["pytest", "black", "isort", "flake8", "flake8-docstrings", "pytest-cov"]
dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml"]
doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
]

[tool.poetry.dev-dependencies]
hypothesis = "^6.46.9"
pytest-xdist = { extras = ["psutil"], version = "^2.5.0" }
pytest-randomly = "^3.12.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
addopts = ["--strict-markers", "-n 6", "-q"]
markers = [
    "happy_path: marks tests as happy_path (deselect with '-m \"not happy_path\"')",
    "unhappy_path: marks tests as unhappy_path (deselect with '-m \"not unhappy_path\"')",
    "bullish_pattern: marks tests as bullish_pattern (deselect with '-m \"not bullish_pattern\"')",
    "bearish_pattern: marks tests as bearish_pattern (deselect with '-m \"not bearish_pattern\"')",
]
